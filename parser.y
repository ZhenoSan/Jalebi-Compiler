%{
void yyerror (char *s);
#include <stdio.h>
#include <stdlib.h>
int symboltable[50];
int GetSymbolValue(char symbol);
void UpdateSymbolValue(char symbol, int value);
%}

%token markazi se chalo jabtak
%token agar agarwarna warna likho
%token hindsa chindsa bhindsa jumla booliyayi aasharia
%token khaali sahih ghalat 
%token stringliteral identifier
%token decimal integer
%token comma semicolon	

%start start
%left LRP RRP LCP RCP
%right INO DCO
%left MUL DIV MOD PLS MIS
%left LT LTE GT GTE IEQ NEQ 
%left NOT AND OR
%right EA AA SA MA DA 

%%
start: markazi LRP RRP COMPOUNDSTATEMENT
ASSIGNMENTOPERATORS: EA | MA | DA | AA | SA
RELATIONALOPERATORS: GT | LT | GTE | LTE | IEQ | NEQ
LOGICALOPERATORS: AND | OR
NOTOPERATOR: NOT
INCDECOPERATORS: INO | DCO
BOOLTYPE: booliyayi
BOOLOPTIONS: sahih | ghalat
FLOATTYPE: aasharia
NUMBERTYPE: hindsa | chindsa | bhindsa
STRINGTYPE: jumla
NUMBERS: integer | decimal
COMPOUNDSTATEMENT: LCP MULTIDECLARATION  MULTISTATEMENT RCP
MULTIDECLARATION: DECLARATION MULTIDECLARATION | DECLARATION
MULTISTATEMENT: STATEMENT MULTISTATEMENT | STATEMENT
DECLARATION: NUMBERTYPE identifier semicolon 
	| STRINGTYPE identifier semicolon 
	| FLOATTYPE identifier semicolon 
	| NUMBERTYPE identifier EA integer semicolon 
	| STRINGTYPE identifier EA stringliteral semicolon 
	| FLOATTYPE identifier EA decimal semicolon 
	| BOOLTYPE identifier EA BOOLOPTIONS semicolon 
STATEMENT: EXPRESSIONSTATEMENT
	| SELECTIONSTATEMENT
	| ITERATIONSTATEMENT
	| PRINTSTATEMENT
PRINTSTATEMENT: likho LRP stringliteral RRP 
	| likho LRP stringliteral comma identifier RRP 
SELECTIONSTATEMENT: IFSTATEMENT ELSEIFSTATEMENT ELSESTATEMENT
IFSTATEMENT: agar LRP LOGICALEXPRESSION RRP COMPOUNDSTATEMENT
ELSEIFSTATEMENT: agarwarna LRP LOGICALEXPRESSION RRP COMPOUNDSTATEMENT 
	| 
ELSESTATEMENT: warna COMPOUNDSTATEMENT 
	| 
ITERATIONSTATEMENT: jabtak LRP LOGICALEXPRESSION RRP COMPOUNDSTATEMENT
        | chalo LRP integer se integer RRP COMPOUNDSTATEMENT
LOGICALEXPRESSION: LRP RELATIONALEXPRESSION RRP LOGICALOPERATORS LRP RELATIONALEXPRESSION RRP
 	| NOTOPERATOR LRP RELATIONALEXPRESSION RRP 
	| RELATIONALEXPRESSION
RELATIONALEXPRESSION: identifier RELATIONALOPERATORS integer
	| integer RELATIONALOPERATORS integer
	| BOOLOPTIONS
EXPRESSIONSTATEMENT: identifier ASSIGNMENTOPERATORS identifier semicolon
	| identifier ASSIGNMENTOPERATORS NUMBERS semicolon
	| identifier INCDECOPERATORS semicolon
	| INCDECOPERATORS identifier semicolon
	| identifier ASSIGNMENTOPERATORS ADDEXPRESSION semicolon
ADDEXPRESSION: ADDEXPRESSION PLS MULTIPLYEXPRESSION 
	| ADDEXPRESSION MIS MULTIPLYEXPRESSION 
	| MULTIPLYEXPRESSION semicolon
MULTIPLYEXPRESSION: MULTIPLYEXPRESSION MUL TERMINALEXPRESSION 
	| MULTIPLYEXPRESSION DIV TERMINALEXPRESSION 
	| TERMINALEXPRESSION semicolon
TERMINALEXPRESSION: NUMBERS 
	| identifier 
	| LRP ADDEXPRESSION RRP semicolon
%%

int main(void){
	return yyparse();
}

void yyerror (char *s) {
	fprintf(stderr, "%s\n",s); 
}
